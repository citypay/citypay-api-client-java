/*
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.citypay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.citypay.client.model.PaylinkCustomParam;
import com.citypay.client.model.PaylinkFieldGuardModel;
import com.citypay.client.model.PaylinkPartPayments;
import com.citypay.client.model.PaylinkUI;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * PaylinkConfig
 */
public class PaylinkConfig {
  public static final String SERIALIZED_NAME_ACS_MODE = "acs_mode";
  @SerializedName(SERIALIZED_NAME_ACS_MODE)
  private String acsMode;

  public static final String SERIALIZED_NAME_CUSTOM_PARAMS = "custom_params";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PARAMS)
  private List<PaylinkCustomParam> customParams = null;

  public static final String SERIALIZED_NAME_DESCRIPTOR = "descriptor";
  @SerializedName(SERIALIZED_NAME_DESCRIPTOR)
  private String descriptor;

  public static final String SERIALIZED_NAME_EXPIRE_IN = "expire_in";
  @SerializedName(SERIALIZED_NAME_EXPIRE_IN)
  private String expireIn;

  public static final String SERIALIZED_NAME_FIELD_GUARD = "field_guard";
  @SerializedName(SERIALIZED_NAME_FIELD_GUARD)
  private List<PaylinkFieldGuardModel> fieldGuard = null;

  public static final String SERIALIZED_NAME_LOCK_PARAMS = "lock_params";
  @SerializedName(SERIALIZED_NAME_LOCK_PARAMS)
  private List<String> lockParams = null;

  public static final String SERIALIZED_NAME_MERCH_LOGO = "merch_logo";
  @SerializedName(SERIALIZED_NAME_MERCH_LOGO)
  private String merchLogo;

  public static final String SERIALIZED_NAME_MERCH_TERMS = "merch_terms";
  @SerializedName(SERIALIZED_NAME_MERCH_TERMS)
  private String merchTerms;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<String> options = null;

  public static final String SERIALIZED_NAME_PART_PAYMENTS = "part_payments";
  @SerializedName(SERIALIZED_NAME_PART_PAYMENTS)
  private PaylinkPartPayments partPayments;

  public static final String SERIALIZED_NAME_PASS_THROUGH_DATA = "pass_through_data";
  @SerializedName(SERIALIZED_NAME_PASS_THROUGH_DATA)
  private Map<String, String> passThroughData = null;

  public static final String SERIALIZED_NAME_PASS_THROUGH_HEADERS = "pass_through_headers";
  @SerializedName(SERIALIZED_NAME_PASS_THROUGH_HEADERS)
  private Map<String, String> passThroughHeaders = null;

  public static final String SERIALIZED_NAME_POSTBACK = "postback";
  @SerializedName(SERIALIZED_NAME_POSTBACK)
  private String postback;

  public static final String SERIALIZED_NAME_POSTBACK_PASSWORD = "postback_password";
  @SerializedName(SERIALIZED_NAME_POSTBACK_PASSWORD)
  private String postbackPassword;

  public static final String SERIALIZED_NAME_POSTBACK_POLICY = "postback_policy";
  @SerializedName(SERIALIZED_NAME_POSTBACK_POLICY)
  private String postbackPolicy;

  public static final String SERIALIZED_NAME_POSTBACK_USERNAME = "postback_username";
  @SerializedName(SERIALIZED_NAME_POSTBACK_USERNAME)
  private String postbackUsername;

  public static final String SERIALIZED_NAME_REDIRECT_DELAY = "redirect_delay";
  @SerializedName(SERIALIZED_NAME_REDIRECT_DELAY)
  private Integer redirectDelay;

  public static final String SERIALIZED_NAME_REDIRECT_FAILURE = "redirect_failure";
  @SerializedName(SERIALIZED_NAME_REDIRECT_FAILURE)
  private String redirectFailure;

  public static final String SERIALIZED_NAME_REDIRECT_SUCCESS = "redirect_success";
  @SerializedName(SERIALIZED_NAME_REDIRECT_SUCCESS)
  private String redirectSuccess;

  public static final String SERIALIZED_NAME_RENDERER = "renderer";
  @SerializedName(SERIALIZED_NAME_RENDERER)
  private String renderer;

  public static final String SERIALIZED_NAME_RETURN_PARAMS = "return_params";
  @SerializedName(SERIALIZED_NAME_RETURN_PARAMS)
  private Boolean returnParams;

  public static final String SERIALIZED_NAME_UI = "ui";
  @SerializedName(SERIALIZED_NAME_UI)
  private PaylinkUI ui;


  public PaylinkConfig acsMode(String acsMode) {
    
    this.acsMode = acsMode;
    return this;
  }

   /**
   * Specifies the approach to be adopted by the Paylink form when displaying a 3-D Secure challenge window. The values may be  iframe: shows the 3-D Secure ACS in an iframe dialog, neatly embedding it in Paylink. This provides a more seamless flow for the cardholder who is able to validate and authenticate their card using a dialog provided by their card issuer.  inline: an inline mode transfers the full browser window to the authentication server, allowing the payment cardholder to see their payment card issuer&#39;s URL and the certificate status in the browser. If you request an iframe mode and the browser width is deemed as being small (&lt; 768px) then an inline mode will be enforced. This is to ensure that mobile users have an improved user experience. 
   * @return acsMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the approach to be adopted by the Paylink form when displaying a 3-D Secure challenge window. The values may be  iframe: shows the 3-D Secure ACS in an iframe dialog, neatly embedding it in Paylink. This provides a more seamless flow for the cardholder who is able to validate and authenticate their card using a dialog provided by their card issuer.  inline: an inline mode transfers the full browser window to the authentication server, allowing the payment cardholder to see their payment card issuer's URL and the certificate status in the browser. If you request an iframe mode and the browser width is deemed as being small (< 768px) then an inline mode will be enforced. This is to ensure that mobile users have an improved user experience. ")

  public String getAcsMode() {
    return acsMode;
  }


  public void setAcsMode(String acsMode) {
    this.acsMode = acsMode;
  }


  public PaylinkConfig customParams(List<PaylinkCustomParam> customParams) {
    
    this.customParams = customParams;
    return this;
  }

  public PaylinkConfig addCustomParamsItem(PaylinkCustomParam customParamsItem) {
    if (this.customParams == null) {
      this.customParams = new ArrayList<>();
    }
    this.customParams.add(customParamsItem);
    return this;
  }

   /**
   * Get customParams
   * @return customParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PaylinkCustomParam> getCustomParams() {
    return customParams;
  }


  public void setCustomParams(List<PaylinkCustomParam> customParams) {
    this.customParams = customParams;
  }


  public PaylinkConfig descriptor(String descriptor) {
    
    this.descriptor = descriptor;
    return this;
  }

   /**
   * Directly specify the merchant descriptor used for the transaction to be displayed on the payment page.
   * @return descriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Directly specify the merchant descriptor used for the transaction to be displayed on the payment page.")

  public String getDescriptor() {
    return descriptor;
  }


  public void setDescriptor(String descriptor) {
    this.descriptor = descriptor;
  }


  public PaylinkConfig expireIn(String expireIn) {
    
    this.expireIn = expireIn;
    return this;
  }

   /**
   * Specifies a period of time in seconds after which the token cannot be used. A value of 0 defines that the token will never expire. The API will convert an expiry time based on a string value. For instance:   s - Time in seconds, for example 90s.   m - Time in minutes, for example 20m.   h - Time in hours, for example 4h.   w - Time in weeks, for example 4w.   M - Time in months, for example 6M.   y - Time in years, for example 1y.   Defaults to 30 minutes. 
   * @return expireIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a period of time in seconds after which the token cannot be used. A value of 0 defines that the token will never expire. The API will convert an expiry time based on a string value. For instance:   s - Time in seconds, for example 90s.   m - Time in minutes, for example 20m.   h - Time in hours, for example 4h.   w - Time in weeks, for example 4w.   M - Time in months, for example 6M.   y - Time in years, for example 1y.   Defaults to 30 minutes. ")

  public String getExpireIn() {
    return expireIn;
  }


  public void setExpireIn(String expireIn) {
    this.expireIn = expireIn;
  }


  public PaylinkConfig fieldGuard(List<PaylinkFieldGuardModel> fieldGuard) {
    
    this.fieldGuard = fieldGuard;
    return this;
  }

  public PaylinkConfig addFieldGuardItem(PaylinkFieldGuardModel fieldGuardItem) {
    if (this.fieldGuard == null) {
      this.fieldGuard = new ArrayList<>();
    }
    this.fieldGuard.add(fieldGuardItem);
    return this;
  }

   /**
   * Get fieldGuard
   * @return fieldGuard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PaylinkFieldGuardModel> getFieldGuard() {
    return fieldGuard;
  }


  public void setFieldGuard(List<PaylinkFieldGuardModel> fieldGuard) {
    this.fieldGuard = fieldGuard;
  }


  public PaylinkConfig lockParams(List<String> lockParams) {
    
    this.lockParams = lockParams;
    return this;
  }

  public PaylinkConfig addLockParamsItem(String lockParamsItem) {
    if (this.lockParams == null) {
      this.lockParams = new ArrayList<>();
    }
    this.lockParams.add(lockParamsItem);
    return this;
  }

   /**
   * Get lockParams
   * @return lockParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getLockParams() {
    return lockParams;
  }


  public void setLockParams(List<String> lockParams) {
    this.lockParams = lockParams;
  }


  public PaylinkConfig merchLogo(String merchLogo) {
    
    this.merchLogo = merchLogo;
    return this;
  }

   /**
   * A URL of a logo to include in the form. The URL should be delivered using HTTPS.
   * @return merchLogo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL of a logo to include in the form. The URL should be delivered using HTTPS.")

  public String getMerchLogo() {
    return merchLogo;
  }


  public void setMerchLogo(String merchLogo) {
    this.merchLogo = merchLogo;
  }


  public PaylinkConfig merchTerms(String merchTerms) {
    
    this.merchTerms = merchTerms;
    return this;
  }

   /**
   * A URL of the merchant terms and conditions for payment. If a value is supplied, a checkbox will be required to be completed to confirm that the cardholder agrees to these conditions before payment. A modal dialogue is displayed with the content of the conditions displayed.
   * @return merchTerms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL of the merchant terms and conditions for payment. If a value is supplied, a checkbox will be required to be completed to confirm that the cardholder agrees to these conditions before payment. A modal dialogue is displayed with the content of the conditions displayed.")

  public String getMerchTerms() {
    return merchTerms;
  }


  public void setMerchTerms(String merchTerms) {
    this.merchTerms = merchTerms;
  }


  public PaylinkConfig options(List<String> options) {
    
    this.options = options;
    return this;
  }

  public PaylinkConfig addOptionsItem(String optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getOptions() {
    return options;
  }


  public void setOptions(List<String> options) {
    this.options = options;
  }


  public PaylinkConfig partPayments(PaylinkPartPayments partPayments) {
    
    this.partPayments = partPayments;
    return this;
  }

   /**
   * Get partPayments
   * @return partPayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaylinkPartPayments getPartPayments() {
    return partPayments;
  }


  public void setPartPayments(PaylinkPartPayments partPayments) {
    this.partPayments = partPayments;
  }


  public PaylinkConfig passThroughData(Map<String, String> passThroughData) {
    
    this.passThroughData = passThroughData;
    return this;
  }

  public PaylinkConfig putPassThroughDataItem(String key, String passThroughDataItem) {
    if (this.passThroughData == null) {
      this.passThroughData = new HashMap<>();
    }
    this.passThroughData.put(key, passThroughDataItem);
    return this;
  }

   /**
   * Get passThroughData
   * @return passThroughData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getPassThroughData() {
    return passThroughData;
  }


  public void setPassThroughData(Map<String, String> passThroughData) {
    this.passThroughData = passThroughData;
  }


  public PaylinkConfig passThroughHeaders(Map<String, String> passThroughHeaders) {
    
    this.passThroughHeaders = passThroughHeaders;
    return this;
  }

  public PaylinkConfig putPassThroughHeadersItem(String key, String passThroughHeadersItem) {
    if (this.passThroughHeaders == null) {
      this.passThroughHeaders = new HashMap<>();
    }
    this.passThroughHeaders.put(key, passThroughHeadersItem);
    return this;
  }

   /**
   * Get passThroughHeaders
   * @return passThroughHeaders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getPassThroughHeaders() {
    return passThroughHeaders;
  }


  public void setPassThroughHeaders(Map<String, String> passThroughHeaders) {
    this.passThroughHeaders = passThroughHeaders;
  }


  public PaylinkConfig postback(String postback) {
    
    this.postback = postback;
    return this;
  }

   /**
   * Specifies a URL to use for a call back when the payment is completed. see Postback Handling }.
   * @return postback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a URL to use for a call back when the payment is completed. see Postback Handling }.")

  public String getPostback() {
    return postback;
  }


  public void setPostback(String postback) {
    this.postback = postback;
  }


  public PaylinkConfig postbackPassword(String postbackPassword) {
    
    this.postbackPassword = postbackPassword;
    return this;
  }

   /**
   * A password to be added to the postback for HTTP Basic Authentication.
   * @return postbackPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A password to be added to the postback for HTTP Basic Authentication.")

  public String getPostbackPassword() {
    return postbackPassword;
  }


  public void setPostbackPassword(String postbackPassword) {
    this.postbackPassword = postbackPassword;
  }


  public PaylinkConfig postbackPolicy(String postbackPolicy) {
    
    this.postbackPolicy = postbackPolicy;
    return this;
  }

   /**
   * The policy setting for the postback see Postback Handling.
   * @return postbackPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The policy setting for the postback see Postback Handling.")

  public String getPostbackPolicy() {
    return postbackPolicy;
  }


  public void setPostbackPolicy(String postbackPolicy) {
    this.postbackPolicy = postbackPolicy;
  }


  public PaylinkConfig postbackUsername(String postbackUsername) {
    
    this.postbackUsername = postbackUsername;
    return this;
  }

   /**
   * A username to be added to the postback for HTTP Basic Authentication.
   * @return postbackUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A username to be added to the postback for HTTP Basic Authentication.")

  public String getPostbackUsername() {
    return postbackUsername;
  }


  public void setPostbackUsername(String postbackUsername) {
    this.postbackUsername = postbackUsername;
  }


  public PaylinkConfig redirectDelay(Integer redirectDelay) {
    
    this.redirectDelay = redirectDelay;
    return this;
  }

   /**
   * A value which can delay the redirection in seconds. A value of 0 will redirect immediately.
   * @return redirectDelay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value which can delay the redirection in seconds. A value of 0 will redirect immediately.")

  public Integer getRedirectDelay() {
    return redirectDelay;
  }


  public void setRedirectDelay(Integer redirectDelay) {
    this.redirectDelay = redirectDelay;
  }


  public PaylinkConfig redirectFailure(String redirectFailure) {
    
    this.redirectFailure = redirectFailure;
    return this;
  }

   /**
   * A URL which the browser is redirected to on non-completion of a transaction.
   * @return redirectFailure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL which the browser is redirected to on non-completion of a transaction.")

  public String getRedirectFailure() {
    return redirectFailure;
  }


  public void setRedirectFailure(String redirectFailure) {
    this.redirectFailure = redirectFailure;
  }


  public PaylinkConfig redirectSuccess(String redirectSuccess) {
    
    this.redirectSuccess = redirectSuccess;
    return this;
  }

   /**
   * A URL which the browser is redirected to on authorisation of a transaction.
   * @return redirectSuccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL which the browser is redirected to on authorisation of a transaction.")

  public String getRedirectSuccess() {
    return redirectSuccess;
  }


  public void setRedirectSuccess(String redirectSuccess) {
    this.redirectSuccess = redirectSuccess;
  }


  public PaylinkConfig renderer(String renderer) {
    
    this.renderer = renderer;
    return this;
  }

   /**
   * The Paylink renderer engine to use.
   * @return renderer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Paylink renderer engine to use.")

  public String getRenderer() {
    return renderer;
  }


  public void setRenderer(String renderer) {
    this.renderer = renderer;
  }


  public PaylinkConfig returnParams(Boolean returnParams) {
    
    this.returnParams = returnParams;
    return this;
  }

   /**
   * If a value of true is specified, any redirection will include the transaction result in parameters. It is recommended to use the postback integration rather than redirection parameters.
   * @return returnParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If a value of true is specified, any redirection will include the transaction result in parameters. It is recommended to use the postback integration rather than redirection parameters.")

  public Boolean isReturnParams() {
    return returnParams;
  }


  public void setReturnParams(Boolean returnParams) {
    this.returnParams = returnParams;
  }


  public PaylinkConfig ui(PaylinkUI ui) {
    
    this.ui = ui;
    return this;
  }

   /**
   * Get ui
   * @return ui
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaylinkUI getUi() {
    return ui;
  }


  public void setUi(PaylinkUI ui) {
    this.ui = ui;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaylinkConfig paylinkConfig = (PaylinkConfig) o;
    return Objects.equals(this.acsMode, paylinkConfig.acsMode) &&
        Objects.equals(this.customParams, paylinkConfig.customParams) &&
        Objects.equals(this.descriptor, paylinkConfig.descriptor) &&
        Objects.equals(this.expireIn, paylinkConfig.expireIn) &&
        Objects.equals(this.fieldGuard, paylinkConfig.fieldGuard) &&
        Objects.equals(this.lockParams, paylinkConfig.lockParams) &&
        Objects.equals(this.merchLogo, paylinkConfig.merchLogo) &&
        Objects.equals(this.merchTerms, paylinkConfig.merchTerms) &&
        Objects.equals(this.options, paylinkConfig.options) &&
        Objects.equals(this.partPayments, paylinkConfig.partPayments) &&
        Objects.equals(this.passThroughData, paylinkConfig.passThroughData) &&
        Objects.equals(this.passThroughHeaders, paylinkConfig.passThroughHeaders) &&
        Objects.equals(this.postback, paylinkConfig.postback) &&
        Objects.equals(this.postbackPassword, paylinkConfig.postbackPassword) &&
        Objects.equals(this.postbackPolicy, paylinkConfig.postbackPolicy) &&
        Objects.equals(this.postbackUsername, paylinkConfig.postbackUsername) &&
        Objects.equals(this.redirectDelay, paylinkConfig.redirectDelay) &&
        Objects.equals(this.redirectFailure, paylinkConfig.redirectFailure) &&
        Objects.equals(this.redirectSuccess, paylinkConfig.redirectSuccess) &&
        Objects.equals(this.renderer, paylinkConfig.renderer) &&
        Objects.equals(this.returnParams, paylinkConfig.returnParams) &&
        Objects.equals(this.ui, paylinkConfig.ui);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acsMode, customParams, descriptor, expireIn, fieldGuard, lockParams, merchLogo, merchTerms, options, partPayments, passThroughData, passThroughHeaders, postback, postbackPassword, postbackPolicy, postbackUsername, redirectDelay, redirectFailure, redirectSuccess, renderer, returnParams, ui);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaylinkConfig {\n");
    sb.append("    acsMode: ").append(toIndentedString(acsMode)).append("\n");
    sb.append("    customParams: ").append(toIndentedString(customParams)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    expireIn: ").append(toIndentedString(expireIn)).append("\n");
    sb.append("    fieldGuard: ").append(toIndentedString(fieldGuard)).append("\n");
    sb.append("    lockParams: ").append(toIndentedString(lockParams)).append("\n");
    sb.append("    merchLogo: ").append(toIndentedString(merchLogo)).append("\n");
    sb.append("    merchTerms: ").append(toIndentedString(merchTerms)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    partPayments: ").append(toIndentedString(partPayments)).append("\n");
    sb.append("    passThroughData: ").append(toIndentedString(passThroughData)).append("\n");
    sb.append("    passThroughHeaders: ").append(toIndentedString(passThroughHeaders)).append("\n");
    sb.append("    postback: ").append(toIndentedString(postback)).append("\n");
    sb.append("    postbackPassword: ").append(toIndentedString(postbackPassword)).append("\n");
    sb.append("    postbackPolicy: ").append(toIndentedString(postbackPolicy)).append("\n");
    sb.append("    postbackUsername: ").append(toIndentedString(postbackUsername)).append("\n");
    sb.append("    redirectDelay: ").append(toIndentedString(redirectDelay)).append("\n");
    sb.append("    redirectFailure: ").append(toIndentedString(redirectFailure)).append("\n");
    sb.append("    redirectSuccess: ").append(toIndentedString(redirectSuccess)).append("\n");
    sb.append("    renderer: ").append(toIndentedString(renderer)).append("\n");
    sb.append("    returnParams: ").append(toIndentedString(returnParams)).append("\n");
    sb.append("    ui: ").append(toIndentedString(ui)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

