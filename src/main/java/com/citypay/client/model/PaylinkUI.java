/*
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.citypay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PaylinkUI
 */
public class PaylinkUI {
  public static final String SERIALIZED_NAME_ADDRESS_MANDATORY = "address_mandatory";
  @SerializedName(SERIALIZED_NAME_ADDRESS_MANDATORY)
  private Boolean addressMandatory;

  public static final String SERIALIZED_NAME_FORM_AUTO_COMPLETE = "form_auto_complete";
  @SerializedName(SERIALIZED_NAME_FORM_AUTO_COMPLETE)
  private String formAutoComplete;

  public static final String SERIALIZED_NAME_ORDERING = "ordering";
  @SerializedName(SERIALIZED_NAME_ORDERING)
  private Integer ordering;

  public static final String SERIALIZED_NAME_POSTCODE_MANDATORY = "postcode_mandatory";
  @SerializedName(SERIALIZED_NAME_POSTCODE_MANDATORY)
  private Boolean postcodeMandatory;


  public PaylinkUI addressMandatory(Boolean addressMandatory) {
    
    this.addressMandatory = addressMandatory;
    return this;
  }

   /**
   * whether the address is forced as mandatory.
   * @return addressMandatory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether the address is forced as mandatory.")

  public Boolean isAddressMandatory() {
    return addressMandatory;
  }


  public void setAddressMandatory(Boolean addressMandatory) {
    this.addressMandatory = addressMandatory;
  }


  public PaylinkUI formAutoComplete(String formAutoComplete) {
    
    this.formAutoComplete = formAutoComplete;
    return this;
  }

   /**
   * specify the form autocomplete setting, default to on. If set to off the UI will set autocomplete&#x3D;\&quot;off\&quot; on the form level and prevent elements from adding it.
   * @return formAutoComplete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "specify the form autocomplete setting, default to on. If set to off the UI will set autocomplete=\"off\" on the form level and prevent elements from adding it.")

  public String getFormAutoComplete() {
    return formAutoComplete;
  }


  public void setFormAutoComplete(String formAutoComplete) {
    this.formAutoComplete = formAutoComplete;
  }


  public PaylinkUI ordering(Integer ordering) {
    
    this.ordering = ordering;
    return this;
  }

   /**
   * the logical ordering of the ui groups.
   * @return ordering
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the logical ordering of the ui groups.")

  public Integer getOrdering() {
    return ordering;
  }


  public void setOrdering(Integer ordering) {
    this.ordering = ordering;
  }


  public PaylinkUI postcodeMandatory(Boolean postcodeMandatory) {
    
    this.postcodeMandatory = postcodeMandatory;
    return this;
  }

   /**
   * whether the postcode is forced as mandatory.
   * @return postcodeMandatory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "whether the postcode is forced as mandatory.")

  public Boolean isPostcodeMandatory() {
    return postcodeMandatory;
  }


  public void setPostcodeMandatory(Boolean postcodeMandatory) {
    this.postcodeMandatory = postcodeMandatory;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaylinkUI paylinkUI = (PaylinkUI) o;
    return Objects.equals(this.addressMandatory, paylinkUI.addressMandatory) &&
        Objects.equals(this.formAutoComplete, paylinkUI.formAutoComplete) &&
        Objects.equals(this.ordering, paylinkUI.ordering) &&
        Objects.equals(this.postcodeMandatory, paylinkUI.postcodeMandatory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressMandatory, formAutoComplete, ordering, postcodeMandatory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaylinkUI {\n");
    sb.append("    addressMandatory: ").append(toIndentedString(addressMandatory)).append("\n");
    sb.append("    formAutoComplete: ").append(toIndentedString(formAutoComplete)).append("\n");
    sb.append("    ordering: ").append(toIndentedString(ordering)).append("\n");
    sb.append("    postcodeMandatory: ").append(toIndentedString(postcodeMandatory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

