/*
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security <aside class=\"notice\">   Before we begin a reminder that your application will need to adhere to PCI-DSS standards to operate safely   and to meet requirements set out by Visa and MasterCard and the PCI Security Standards Council including: </aside>  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.citypay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ContactDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-10-07T09:17:31.584Z[GMT]")
public class ContactDetails {
  public static final String SERIALIZED_NAME_ADDRESS1 = "address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "address2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  private String address2;

  public static final String SERIALIZED_NAME_ADDRESS3 = "address3";
  @SerializedName(SERIALIZED_NAME_ADDRESS3)
  private String address3;

  public static final String SERIALIZED_NAME_AREA = "area";
  @SerializedName(SERIALIZED_NAME_AREA)
  private String area;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private String company;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_MOBILE_NO = "mobile_no";
  @SerializedName(SERIALIZED_NAME_MOBILE_NO)
  private String mobileNo;

  public static final String SERIALIZED_NAME_POSTCODE = "postcode";
  @SerializedName(SERIALIZED_NAME_POSTCODE)
  private String postcode;

  public static final String SERIALIZED_NAME_TELEPHONE_NO = "telephone_no";
  @SerializedName(SERIALIZED_NAME_TELEPHONE_NO)
  private String telephoneNo;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;


  public ContactDetails address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

   /**
   * The first line of the address for the card holder.
   * @return address1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "79 Parliament St", value = "The first line of the address for the card holder.")

  public String getAddress1() {
    return address1;
  }


  public void setAddress1(String address1) {
    this.address1 = address1;
  }


  public ContactDetails address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

   /**
   * The second line of the address for the card holder.
   * @return address2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Westminster", value = "The second line of the address for the card holder.")

  public String getAddress2() {
    return address2;
  }


  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public ContactDetails address3(String address3) {
    
    this.address3 = address3;
    return this;
  }

   /**
   * The third line of the address for the card holder.
   * @return address3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The third line of the address for the card holder.")

  public String getAddress3() {
    return address3;
  }


  public void setAddress3(String address3) {
    this.address3 = address3;
  }


  public ContactDetails area(String area) {
    
    this.area = area;
    return this;
  }

   /**
   * The area such as city, department, parish for the card holder.
   * @return area
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "London", value = "The area such as city, department, parish for the card holder.")

  public String getArea() {
    return area;
  }


  public void setArea(String area) {
    this.area = area;
  }


  public ContactDetails company(String company) {
    
    this.company = company;
    return this;
  }

   /**
   * The company name for the card holder if the contact is a corporate contact.
   * @return company
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Acme Ltd", value = "The company name for the card holder if the contact is a corporate contact.")

  public String getCompany() {
    return company;
  }


  public void setCompany(String company) {
    this.company = company;
  }


  public ContactDetails country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * The country code in ISO 3166 format. The country value may be used for fraud analysis and for   acceptance of the transaction. 
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "GB", value = "The country code in ISO 3166 format. The country value may be used for fraud analysis and for   acceptance of the transaction. ")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public ContactDetails email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * An email address for the card holder which may be used for correspondence.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "card.holder@citypay.com", value = "An email address for the card holder which may be used for correspondence.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public ContactDetails firstname(String firstname) {
    
    this.firstname = firstname;
    return this;
  }

   /**
   * The first name  of the card holder.
   * @return firstname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John", value = "The first name  of the card holder.")

  public String getFirstname() {
    return firstname;
  }


  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public ContactDetails lastname(String lastname) {
    
    this.lastname = lastname;
    return this;
  }

   /**
   * The last name or surname of the card holder.
   * @return lastname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Smith", value = "The last name or surname of the card holder.")

  public String getLastname() {
    return lastname;
  }


  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public ContactDetails mobileNo(String mobileNo) {
    
    this.mobileNo = mobileNo;
    return this;
  }

   /**
   * A mobile number for the card holder the mobile number is often required by delivery companies to ensure they are able to be in contact when required.
   * @return mobileNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "447790123456", value = "A mobile number for the card holder the mobile number is often required by delivery companies to ensure they are able to be in contact when required.")

  public String getMobileNo() {
    return mobileNo;
  }


  public void setMobileNo(String mobileNo) {
    this.mobileNo = mobileNo;
  }


  public ContactDetails postcode(String postcode) {
    
    this.postcode = postcode;
    return this;
  }

   /**
   * The postcode or zip code of the address which may be used for fraud analysis.
   * @return postcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "L1 789", value = "The postcode or zip code of the address which may be used for fraud analysis.")

  public String getPostcode() {
    return postcode;
  }


  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }


  public ContactDetails telephoneNo(String telephoneNo) {
    
    this.telephoneNo = telephoneNo;
    return this;
  }

   /**
   * A telephone number for the card holder.
   * @return telephoneNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "442030123456", value = "A telephone number for the card holder.")

  public String getTelephoneNo() {
    return telephoneNo;
  }


  public void setTelephoneNo(String telephoneNo) {
    this.telephoneNo = telephoneNo;
  }


  public ContactDetails title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * A title for the card holder such as Mr, Mrs, Ms, M. Mme. etc.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mr", value = "A title for the card holder such as Mr, Mrs, Ms, M. Mme. etc.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactDetails contactDetails = (ContactDetails) o;
    return Objects.equals(this.address1, contactDetails.address1) &&
        Objects.equals(this.address2, contactDetails.address2) &&
        Objects.equals(this.address3, contactDetails.address3) &&
        Objects.equals(this.area, contactDetails.area) &&
        Objects.equals(this.company, contactDetails.company) &&
        Objects.equals(this.country, contactDetails.country) &&
        Objects.equals(this.email, contactDetails.email) &&
        Objects.equals(this.firstname, contactDetails.firstname) &&
        Objects.equals(this.lastname, contactDetails.lastname) &&
        Objects.equals(this.mobileNo, contactDetails.mobileNo) &&
        Objects.equals(this.postcode, contactDetails.postcode) &&
        Objects.equals(this.telephoneNo, contactDetails.telephoneNo) &&
        Objects.equals(this.title, contactDetails.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, address3, area, company, country, email, firstname, lastname, mobileNo, postcode, telephoneNo, title);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactDetails {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    address3: ").append(toIndentedString(address3)).append("\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    mobileNo: ").append(toIndentedString(mobileNo)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    telephoneNo: ").append(toIndentedString(telephoneNo)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

