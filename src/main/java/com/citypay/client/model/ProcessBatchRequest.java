/*
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security <aside class=\"notice\">   Before we begin a reminder that your application will need to adhere to PCI-DSS standards to operate safely   and to meet requirements set out by Visa and MasterCard and the PCI Security Standards Council including: </aside>  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.citypay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.citypay.client.model.BatchTransaction;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * ProcessBatchRequest
 */
public class ProcessBatchRequest {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_BATCH_DATE = "batch_date";
  @SerializedName(SERIALIZED_NAME_BATCH_DATE)
  private OffsetDateTime batchDate;

  public static final String SERIALIZED_NAME_BATCH_ID = "batch_id";
  @SerializedName(SERIALIZED_NAME_BATCH_ID)
  private Integer batchId;

  public static final String SERIALIZED_NAME_TRANSACTIONS = "transactions";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONS)
  private List<BatchTransaction> transactions = new ArrayList<>();


  public ProcessBatchRequest accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * The batch account id to process the batch for. Defaults to your client id if not provided.
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AC1", value = "The batch account id to process the batch for. Defaults to your client id if not provided.")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public ProcessBatchRequest batchDate(OffsetDateTime batchDate) {
    
    this.batchDate = batchDate;
    return this;
  }

   /**
   * The date and time that the file was created in ISO-8601 format.
   * @return batchDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2020-01-02T18:32:28Z", required = true, value = "The date and time that the file was created in ISO-8601 format.")

  public OffsetDateTime getBatchDate() {
    return batchDate;
  }


  public void setBatchDate(OffsetDateTime batchDate) {
    this.batchDate = batchDate;
  }


  public ProcessBatchRequest batchId(Integer batchId) {
    
    this.batchId = batchId;
    return this;
  }

   /**
   * The id is a referencable id for the batch that should be generated by your integration. Its recommended to use an incremental id to help determine if a batch has been skipped or missed. The id is used by reporting systems to reference the unique batch alongside your client id. 
   * minimum: 1
   * @return batchId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1975", required = true, value = "The id is a referencable id for the batch that should be generated by your integration. Its recommended to use an incremental id to help determine if a batch has been skipped or missed. The id is used by reporting systems to reference the unique batch alongside your client id. ")

  public Integer getBatchId() {
    return batchId;
  }


  public void setBatchId(Integer batchId) {
    this.batchId = batchId;
  }


  public ProcessBatchRequest transactions(List<BatchTransaction> transactions) {
    
    this.transactions = transactions;
    return this;
  }

  public ProcessBatchRequest addTransactionsItem(BatchTransaction transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * Get transactions
   * @return transactions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BatchTransaction> getTransactions() {
    return transactions;
  }


  public void setTransactions(List<BatchTransaction> transactions) {
    this.transactions = transactions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessBatchRequest processBatchRequest = (ProcessBatchRequest) o;
    return Objects.equals(this.accountId, processBatchRequest.accountId) &&
        Objects.equals(this.batchDate, processBatchRequest.batchDate) &&
        Objects.equals(this.batchId, processBatchRequest.batchId) &&
        Objects.equals(this.transactions, processBatchRequest.transactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, batchDate, batchId, transactions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessBatchRequest {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    batchDate: ").append(toIndentedString(batchDate)).append("\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

