/*
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security <aside class=\"notice\">   Before we begin a reminder that your application will need to adhere to PCI-DSS standards to operate safely   and to meet requirements set out by Visa and MasterCard and the PCI Security Standards Council including: </aside>  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.citypay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.citypay.client.model.Card;
import com.citypay.client.model.ContactDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.time.*;

/**
 * CardHolderAccount
 */
public class CardHolderAccount {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_CARDS = "cards";
  @SerializedName(SERIALIZED_NAME_CARDS)
  private List<Card> cards = null;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private ContactDetails contact;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DEFAULT_CARD_ID = "default_card_id";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CARD_ID)
  private String defaultCardId;

  public static final String SERIALIZED_NAME_DEFAULT_CARD_INDEX = "default_card_index";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CARD_INDEX)
  private Integer defaultCardIndex;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "last_modified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private OffsetDateTime lastModified = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_UNIQUE_ID = "unique_id";
  @SerializedName(SERIALIZED_NAME_UNIQUE_ID)
  private String uniqueId;


  public CardHolderAccount accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * The account id of the card holder account provided by the merchant which uniquely identifies the account. 
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "aaabbb-cccddd-eee", required = true, value = "The account id of the card holder account provided by the merchant which uniquely identifies the account. ")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public CardHolderAccount cards(List<Card> cards) {
    
    this.cards = cards;
    return this;
  }

  public CardHolderAccount addCardsItem(Card cardsItem) {
    if (this.cards == null) {
      this.cards = new ArrayList<>();
    }
    this.cards.add(cardsItem);
    return this;
  }

   /**
   * Get cards
   * @return cards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Card> getCards() {
    return cards;
  }


  public void setCards(List<Card> cards) {
    this.cards = cards;
  }


  public CardHolderAccount contact(ContactDetails contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ContactDetails getContact() {
    return contact;
  }


  public void setContact(ContactDetails contact) {
    this.contact = contact;
  }


  public CardHolderAccount dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * The date and time the account was created.
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-02T18:32:28Z", value = "The date and time the account was created.")

  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public CardHolderAccount defaultCardId(String defaultCardId) {
    
    this.defaultCardId = defaultCardId;
    return this;
  }

   /**
   * The id of the default card.
   * @return defaultCardId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the default card.")

  public String getDefaultCardId() {
    return defaultCardId;
  }


  public void setDefaultCardId(String defaultCardId) {
    this.defaultCardId = defaultCardId;
  }


  public CardHolderAccount defaultCardIndex(Integer defaultCardIndex) {
    
    this.defaultCardIndex = defaultCardIndex;
    return this;
  }

   /**
   * The index in the array of the default card.
   * @return defaultCardIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The index in the array of the default card.")

  public Integer getDefaultCardIndex() {
    return defaultCardIndex;
  }


  public void setDefaultCardIndex(Integer defaultCardIndex) {
    this.defaultCardIndex = defaultCardIndex;
  }


  public CardHolderAccount lastModified(OffsetDateTime lastModified) {
    
    this.lastModified = lastModified;
    return this;
  }

   /**
   * The date and time the account was last modified.
   * @return lastModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-02T18:32:28Z", value = "The date and time the account was last modified.")

  public OffsetDateTime getLastModified() {
    return lastModified;
  }


  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }


  public CardHolderAccount status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Defines the status of the account for processing valid values are   - ACTIVE for active accounts that are able to process   - DISABLED for accounts that are currently disabled for processing. 
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines the status of the account for processing valid values are   - ACTIVE for active accounts that are able to process   - DISABLED for accounts that are currently disabled for processing. ")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public CardHolderAccount uniqueId(String uniqueId) {
    
    this.uniqueId = uniqueId;
    return this;
  }

   /**
   * A unique id of the card holder account which uniquely identifies the stored account. This value is not searchable.
   * @return uniqueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique id of the card holder account which uniquely identifies the stored account. This value is not searchable.")

  public String getUniqueId() {
    return uniqueId;
  }


  public void setUniqueId(String uniqueId) {
    this.uniqueId = uniqueId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardHolderAccount cardHolderAccount = (CardHolderAccount) o;
    return Objects.equals(this.accountId, cardHolderAccount.accountId) &&
        Objects.equals(this.cards, cardHolderAccount.cards) &&
        Objects.equals(this.contact, cardHolderAccount.contact) &&
        Objects.equals(this.dateCreated, cardHolderAccount.dateCreated) &&
        Objects.equals(this.defaultCardId, cardHolderAccount.defaultCardId) &&
        Objects.equals(this.defaultCardIndex, cardHolderAccount.defaultCardIndex) &&
        Objects.equals(this.lastModified, cardHolderAccount.lastModified) &&
        Objects.equals(this.status, cardHolderAccount.status) &&
        Objects.equals(this.uniqueId, cardHolderAccount.uniqueId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, cards, contact, dateCreated, defaultCardId, defaultCardIndex, lastModified, status, uniqueId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardHolderAccount {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    cards: ").append(toIndentedString(cards)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    defaultCardId: ").append(toIndentedString(defaultCardId)).append("\n");
    sb.append("    defaultCardIndex: ").append(toIndentedString(defaultCardIndex)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    uniqueId: ").append(toIndentedString(uniqueId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

