/*
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security <aside class=\"notice\">   Before we begin a reminder that your application will need to adhere to PCI-DSS standards to operate safely   and to meet requirements set out by Visa and MasterCard and the PCI Security Standards Council including: </aside>  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.citypay.client.model;

import com.citypay.client.JSON;
import com.google.gson.reflect.TypeToken;
import java.util.List;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

/**
 * Model tests for ListMerchantsResponse
 */
public class ListMerchantsResponseTest {
    private final ListMerchantsResponse listMerchantsResponse = new JSON().deserialize("{\n" +
            "        \"client_name\": \"CityPay Demo\",\n" +
            "        \"clientid\": \"PC123456\",\n" +
            "        \"merchants\": [\n" +
            "            {\n" +
            "                \"currency\": \"GBP\",\n" +
            "                \"merchantid\": 12345678,\n" +
            "                \"name\": \"CityPay One\",\n" +
            "                \"status\": \"T\",\n" +
            "                \"status_label\": \"Test\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"currency\": \"GBP\",\n" +
            "                \"merchantid\": 87654321,\n" +
            "                \"name\": \"CityPay Two\",\n" +
            "                \"status\": \"T\",\n" +
            "                \"status_label\": \"Test\"\n" +
            "            }\n" +
            "        ]\n" +
            "}", new TypeToken<ListMerchantsResponse>(){}.getType());

    /**
     * Model tests for ListMerchantsResponse
     */
    @Test
    public void testListMerchantsResponse() {
        assert listMerchantsResponse!=null;
    }

    /**
     * Test the property 'clientName'
     */
    @Test
    public void clientNameTest() {
        assertEquals("CityPay Demo", listMerchantsResponse.getClientName());
    }

    /**
     * Test the property 'clientid'
     */
    @Test
    public void clientidTest() {
        assertEquals("PC123456", listMerchantsResponse.getClientid());
    }

    /**
     * Test the property 'merchants'
     */
    @Test
    public void merchantsTest() {
        List<Merchant> merchants = listMerchantsResponse.getMerchants();
        assert merchants!=null;
        assertEquals("GBP", merchants.get(0).getCurrency());
        assertEquals(Integer.valueOf(12345678), merchants.get(0).getMerchantid());
        assertEquals("CityPay One", merchants.get(0).getName());
        assertEquals("T", merchants.get(0).getStatus());
        assertEquals("Test", merchants.get(0).getStatusLabel());

        assertEquals("GBP", merchants.get(1).getCurrency());
        assertEquals(Integer.valueOf(87654321), merchants.get(1).getMerchantid());
        assertEquals("CityPay Two", merchants.get(1).getName());
        assertEquals("T", merchants.get(1).getStatus());
        assertEquals("Test", merchants.get(1).getStatusLabel());
    }

}
