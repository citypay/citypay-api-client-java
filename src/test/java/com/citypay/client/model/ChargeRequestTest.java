/*
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security <aside class=\"notice\">   Before we begin a reminder that your application will need to adhere to PCI-DSS standards to operate safely   and to meet requirements set out by Visa and MasterCard and the PCI Security Standards Council including: </aside>  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.citypay.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ChargeRequest
 */
public class ChargeRequestTest {
    private final ChargeRequest model = new ChargeRequest();

    /**
     * Model tests for ChargeRequest
     */
    @Test
    public void testChargeRequest() {
        // TODO: test ChargeRequest
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'avsPostcodePolicy'
     */
    @Test
    public void avsPostcodePolicyTest() {
        // TODO: test avsPostcodePolicy
    }

    /**
     * Test the property 'csc'
     */
    @Test
    public void cscTest() {
        // TODO: test csc
    }

    /**
     * Test the property 'cscPolicy'
     */
    @Test
    public void cscPolicyTest() {
        // TODO: test cscPolicy
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'duplicatePolicy'
     */
    @Test
    public void duplicatePolicyTest() {
        // TODO: test duplicatePolicy
    }

    /**
     * Test the property 'identifier'
     */
    @Test
    public void identifierTest() {
        // TODO: test identifier
    }

    /**
     * Test the property 'matchAvsa'
     */
    @Test
    public void matchAvsaTest() {
        // TODO: test matchAvsa
    }

    /**
     * Test the property 'merchantid'
     */
    @Test
    public void merchantidTest() {
        // TODO: test merchantid
    }

    /**
     * Test the property 'sdk'
     */
    @Test
    public void sdkTest() {
        // TODO: test sdk
    }

    /**
     * Test the property 'token'
     */
    @Test
    public void tokenTest() {
        // TODO: test token
    }

    /**
     * Test the property 'transInfo'
     */
    @Test
    public void transInfoTest() {
        // TODO: test transInfo
    }

    /**
     * Test the property 'transType'
     */
    @Test
    public void transTypeTest() {
        // TODO: test transType
    }

}
