/*
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security <aside class=\"notice\">   Before we begin a reminder that your application will need to adhere to PCI-DSS standards to operate safely   and to meet requirements set out by Visa and MasterCard and the PCI Security Standards Council including: </aside>  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * The version of the OpenAPI document: 6.0.0
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.citypay.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for AuthResponse
 */
public class AuthResponseTest {
    private final AuthResponse model = new AuthResponse();

    /**
     * Model tests for AuthResponse
     */
    @Test
    public void testAuthResponse() {
        // TODO: test AuthResponse
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'atrn'
     */
    @Test
    public void atrnTest() {
        // TODO: test atrn
    }

    /**
     * Test the property 'atsd'
     */
    @Test
    public void atsdTest() {
        // TODO: test atsd
    }

    /**
     * Test the property 'authcode'
     */
    @Test
    public void authcodeTest() {
        // TODO: test authcode
    }

    /**
     * Test the property 'authenResult'
     */
    @Test
    public void authenResultTest() {
        // TODO: test authenResult
    }

    /**
     * Test the property 'authorised'
     */
    @Test
    public void authorisedTest() {
        // TODO: test authorised
    }

    /**
     * Test the property 'avsResult'
     */
    @Test
    public void avsResultTest() {
        // TODO: test avsResult
    }

    /**
     * Test the property 'binCommercial'
     */
    @Test
    public void binCommercialTest() {
        // TODO: test binCommercial
    }

    /**
     * Test the property 'binDebit'
     */
    @Test
    public void binDebitTest() {
        // TODO: test binDebit
    }

    /**
     * Test the property 'binDescription'
     */
    @Test
    public void binDescriptionTest() {
        // TODO: test binDescription
    }

    /**
     * Test the property 'cavv'
     */
    @Test
    public void cavvTest() {
        // TODO: test cavv
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'cscResult'
     */
    @Test
    public void cscResultTest() {
        // TODO: test cscResult
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'datetime'
     */
    @Test
    public void datetimeTest() {
        // TODO: test datetime
    }

    /**
     * Test the property 'eci'
     */
    @Test
    public void eciTest() {
        // TODO: test eci
    }

    /**
     * Test the property 'identifier'
     */
    @Test
    public void identifierTest() {
        // TODO: test identifier
    }

    /**
     * Test the property 'live'
     */
    @Test
    public void liveTest() {
        // TODO: test live
    }

    /**
     * Test the property 'maskedpan'
     */
    @Test
    public void maskedpanTest() {
        // TODO: test maskedpan
    }

    /**
     * Test the property 'merchantid'
     */
    @Test
    public void merchantidTest() {
        // TODO: test merchantid
    }

    /**
     * Test the property 'result'
     */
    @Test
    public void resultTest() {
        // TODO: test result
    }

    /**
     * Test the property 'resultCode'
     */
    @Test
    public void resultCodeTest() {
        // TODO: test resultCode
    }

    /**
     * Test the property 'resultMessage'
     */
    @Test
    public void resultMessageTest() {
        // TODO: test resultMessage
    }

    /**
     * Test the property 'scheme'
     */
    @Test
    public void schemeTest() {
        // TODO: test scheme
    }

    /**
     * Test the property 'sha256'
     */
    @Test
    public void sha256Test() {
        // TODO: test sha256
    }

    /**
     * Test the property 'transStatus'
     */
    @Test
    public void transStatusTest() {
        // TODO: test transStatus
    }

    /**
     * Test the property 'transno'
     */
    @Test
    public void transnoTest() {
        // TODO: test transno
    }

}
